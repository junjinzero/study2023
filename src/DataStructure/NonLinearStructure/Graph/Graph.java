package DataStructure.NonLinearStructure.Graph;

public class Graph
{
    /*
    *** 그래프 관련 용어 ***
    * 그래프 : 점들과 점들을 연결하는 선들만으로 이루어진 지도 형태의 자료 구조.
    * 점 : 정점(vertex) , 선 : 간선(edge)
    * 정점(vertex) : 그래프의 기본 구성 요소로, 노드 또는 꼭지점이라고도 한다. 각 정점은 고유한 식별자를 가지며 데이터를 저장할 수 있다.
    *   - 즉, 어떤 객체도 정점이 될 수 있다.
    *       -- 고립 정점 : 간선이 하나도 연결되지 않은 외톨이 정점
    * 간선(edge) : 정점들을 연결하는 선. 간선은 두 개의 정점 사이의 관계를 나타내며, 방향성이 있는 경우와 없는 경우로 나뉜다.
    *   - 단방향 간선 : 단방향으로만 이동 가능한 간선. 이동이 가능한 방향을 화살표로 그린다.
    *   - 양방향 간선 : 양 방향으로 모두 이동이 가능한 간선.
    *   - 자기 간선 : 자기 자신을 연결하는 간선
    *   - 다중 간선 : 동일한 다른 접점과 여러 간선이 연결되는 간선
    * 인접 : 두 정점이 하나의 간선으로 연결되어 있을 때 두 정점이 인접하다고 한다.
    * 차수(degree) : 정점에 연결된 간선의 수
    *   - 진입 차수 : 정점으로 들어오는 간선의 수
    *   - 진출 차수 : 정점에서 나가는 간선의 수
    * 경로(path) : 어떤 한 정점에서 다른 하나의 정점으로 가는 길(일련의 연결된 간선을 나타냄).
    *   - 길이(length) : 어떤 경로에서 시작 정점에서 도착 정점까지 거쳐야 하는 정점의 수
    *   - 단순 경로 : 경로에서 시작, 끝 정점을 제외한 방문하는 모든 점이 서로 다른 경로
    *       -- 사이클(cycle) : 시작 정점과 끝 정점이 같은 단순 경로
    *           - 한 정점에서 시작해서 동일한 정점으로 돌아가는 경로. 사이클이 없는 그래프를 트리라고도 한다.
    *           -- 재귀 사이클 : 간선 하나로만 이루어진 사이클
    * 부분 그래프(sub graph) : 그래프를 구성하는 정점들을 임의로 선택한 후, 그 정점을 연결했던 간선들로 선택한 정점을 연결한 그래프
    * */

    /* *** 그래프의 종류 ***
    // * 1. 단순 그래프 : 임의의 두 정점 사이에 간선이 최대 하나 있는 그래프
    // * 2. 다중 그래프 : 임의의 두 정점 사이에 여러 개의 간선을 허용하는 그래프
    // * 3. 의사 그래프 : 다중 그래프이면서 사이클을 허용하는 그래프
    // * 4. 양방향(무향) 그래프 : 연결된 두 정점의 순서를 바꾸어도 같은 간선이 되는 그래프, 즉 양방향으로 통행이 가능한 그래프
    // * 5. 단방향(유향) 그래프 : 일방통행만 가능한 그래프
    // * 6. 연결 그래프 : 임의의 두 정점 사이에 반드시 경로가 존재하는 그래프
    // *   6-1. 완전 그래프 : 모든 정점이 서로 간선으로 양방향 연결되어 있는 그래프
    // * 7. 가중치 그래프 : 간선에 가중치가 부여된 그래프
    */

}
